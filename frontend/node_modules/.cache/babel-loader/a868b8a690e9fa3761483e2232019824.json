{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\Desktop\\\\HCIS\\\\frontend\\\\src\\\\components\\\\profiles\\\\patientTreatment.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../style/patient-profile.css\";\nimport { Form, Col, Button, Row, Card } from \"react-bootstrap\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { proxy, getPatientWithId, getMedicalRecord, getMedicalRecordWithId, logoutUser } from \"../../actions/index\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\n\nconst PatientTreatment = props => {\n  const dispatch = useDispatch();\n  const patientWithId = useSelector(state => state.patientWithId);\n  useEffect(() => {\n    if (!(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"PHYSICIAN\")) {\n      dispatch(logoutUser(props.history));\n    }\n\n    if (!patientWithId.patientInformation[0]) {\n      if (props.location.state) {\n        // console.log(props.location.state.state);\n        dispatch(getPatientWithId(props.location.state.pId, props.location.state.rId, props.history));\n      } else {\n        props.history.push(\"/physician/profile\");\n      }\n    }\n\n    if (patientWithId.recordId === null) {\n      props.history.push(\"/physician/profile\");\n    }\n  }, []);\n\n  const onAddTreatmentClick = () => {\n    // console.log(patientWithId.recordId);\n    dispatch(getMedicalRecordWithId(patientWithId.recordId, props.history));\n  };\n\n  const onDismissPatient = e => {\n    e.preventDefault();\n    axios.post(`${proxy}/dismissPatient/?recordid=${patientWithId.recordId}`).then(res => {\n      alert(\"Patient Successfully Dismissed!\");\n      props.history.push(\"/physician/profile\");\n    }).catch(err => alert(err.response.data.message));\n  };\n\n  const onRecordSelect = recordId => {\n    // console.log(recordId);\n    dispatch(getMedicalRecord(recordId, \"PHYSICIAN\", props.history)); // to=\"/profile/patient/data\"\n  };\n\n  const cards = () => {\n    if (patientWithId.patientInformation[0]) {\n      return patientWithId.patientInformation.map(d => React.createElement(Card, {\n        style: {\n          width: \"30rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Record Data \", d.id), React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, d.physician.name + \" \" + d.physician.surname), React.createElement(Card.Link, {\n        href: \"#\",\n        onClick: () => onRecordSelect(d.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Details\"))));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/physician/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      margin: \"5px 5px 5px 20px\",\n      padding: \"5px 25px 5px 25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"\\u2190 Go Back\"))), React.createElement(\"div\", {\n    className: \"main-patient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"patient-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Patient Information\"), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? patientWithId.patientInformation[0].patient.name : \"Not availble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Surname\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? patientWithId.patientInformation[0].patient.surname : \"Not availble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Date of Birth:\"), React.createElement(Col, {\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? moment(patientWithId.patientInformation[0].patient.date ? patientWithId.patientInformation[0].patient.date : \"\").format(\"MMMM Do YYYY\") : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Gender:\"), React.createElement(Col, {\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    as: \"select\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? patientWithId.patientInformation[0].patient.gender : \"Not availble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Male\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Female\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Other\")))), React.createElement(Form.Group, {\n    controlId: \"formGridAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Address\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? patientWithId.patientInformation[0].patient.address : \"Not availble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter Email\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? patientWithId.patientInformation[0].patient.email : \"Not availble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Phone\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? patientWithId.patientInformation[0].patient.phoneNumber : \"Not availble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Insurance Name\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? patientWithId.patientInformation[0].patient.insurance.name : \"Not availble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Insurance ID\",\n    readOnly: true,\n    value: patientWithId.patientInformation[0] ? patientWithId.patientInformation[0].patient.insurance.insuranceid : \"Not availble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"danger\",\n    type: \"submit\",\n    style: {\n      marginTop: \"10px\"\n    },\n    onClick: onDismissPatient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Dismiss Patient\"), \" \"))), React.createElement(\"div\", {\n    className: \"patient-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"Medical Records\"), \" \", React.createElement(Button, {\n    style: {\n      marginBottom: \"10px\"\n    },\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: () => onAddTreatmentClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Add Treatment\"), cards())));\n};\n\nexport default withRouter(PatientTreatment);","map":{"version":3,"sources":["C:/Users/jonas/Desktop/HCIS/frontend/src/components/profiles/patientTreatment.js"],"names":["React","useState","useEffect","Form","Col","Button","Row","Card","Calendar","useDispatch","useSelector","proxy","getPatientWithId","getMedicalRecord","getMedicalRecordWithId","logoutUser","Link","withRouter","axios","DatePicker","moment","PatientTreatment","props","dispatch","patientWithId","state","localStorage","jwtToken","getItem","history","patientInformation","location","pId","rId","push","recordId","onAddTreatmentClick","onDismissPatient","e","preventDefault","post","then","res","alert","catch","err","response","data","message","onRecordSelect","cards","map","d","width","id","physician","name","surname","textAlign","margin","padding","patient","date","format","gender","address","email","phoneNumber","insurance","insuranceid","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../style/patient-profile.css\";\nimport { Form, Col, Button, Row, Card } from \"react-bootstrap\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  proxy,\n  getPatientWithId,\n  getMedicalRecord,\n  getMedicalRecordWithId,\n  logoutUser\n} from \"../../actions/index\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\n\nconst PatientTreatment = props => {\n  const dispatch = useDispatch();\n  const patientWithId = useSelector(state => state.patientWithId);\n\n  useEffect(() => {\n    if (\n      !(\n        localStorage.jwtToken &&\n        localStorage.getItem(\"userRole\") === \"PHYSICIAN\"\n      )\n    ) {\n      dispatch(logoutUser(props.history));\n    }\n    if (!patientWithId.patientInformation[0]) {\n      if (props.location.state) {\n        // console.log(props.location.state.state);\n        dispatch(\n          getPatientWithId(\n            props.location.state.pId,\n            props.location.state.rId,\n            props.history\n          )\n        );\n      } else {\n        props.history.push(\"/physician/profile\");\n      }\n    }\n    if (patientWithId.recordId === null) {\n      props.history.push(\"/physician/profile\");\n    }\n  }, []);\n\n  const onAddTreatmentClick = () => {\n    // console.log(patientWithId.recordId);\n    dispatch(getMedicalRecordWithId(patientWithId.recordId, props.history));\n  };\n\n  const onDismissPatient = e => {\n    e.preventDefault();\n    axios\n      .post(`${proxy}/dismissPatient/?recordid=${patientWithId.recordId}`)\n      .then(res => {\n        alert(\"Patient Successfully Dismissed!\");\n        props.history.push(\"/physician/profile\");\n      })\n      .catch(err => alert(err.response.data.message));\n  };\n\n  const onRecordSelect = recordId => {\n    // console.log(recordId);\n    dispatch(getMedicalRecord(recordId, \"PHYSICIAN\", props.history));\n    // to=\"/profile/patient/data\"\n  };\n\n  const cards = () => {\n\n    if (patientWithId.patientInformation[0]) {\n      return patientWithId.patientInformation.map(d => (\n        <Card style={{ width: \"30rem\" }}>\n          {/* {console.log(patientWithId.patientInformation)} */}\n          <Card.Body>\n            {/* {console.log(d.treatment ? d.treatment : \"\")} */}\n            <Card.Title>Record Data {d.id}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {d.physician.name + \" \" + d.physician.surname}\n            </Card.Subtitle>\n            <Card.Link href=\"#\" onClick={() => onRecordSelect(d.id)}>\n              Details\n            </Card.Link>\n          </Card.Body>\n        </Card>\n      ));\n    }\n  };\n\n  return (\n    <>\n      <div style={{ textAlign: \"left\" }}>\n        <Link to=\"/physician/profile\">\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            style={{ margin: \"5px 5px 5px 20px\", padding: \"5px 25px 5px 25px\" }}\n          >\n            &#8592; Go Back\n          </Button>\n        </Link>\n      </div>\n      <div className=\"main-patient\">\n        <div className=\"patient-details\">\n          <Form>\n            <h4 className=\"patient-form-heading\">Patient Information</h4>\n            <Form.Group as={Row} controlId=\"formHorizontalName\">\n              <Col sm={6}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  readOnly\n                  value={\n                    patientWithId.patientInformation[0]\n                      ? patientWithId.patientInformation[0].patient.name\n                      : \"Not availble\"\n                  }\n                />\n              </Col>\n              <Col sm={6}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Surname\"\n                  readOnly\n                  value={\n                    patientWithId.patientInformation[0]\n                      ? patientWithId.patientInformation[0].patient.surname\n                      : \"Not availble\"\n                  }\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={4}>\n                Date of Birth:\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  type=\"text\"\n                  readOnly\n                  value={\n                    patientWithId.patientInformation[0]\n                      ? moment(patientWithId.patientInformation[0].patient.date ? patientWithId.patientInformation[0].patient.date : \"\").format(\"MMMM Do YYYY\")\n                      : \"\"\n                  }\n                />\n\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={4}>\n                Gender:\n              </Form.Label>\n              <Col sm={8}>\n                <Form.Control\n                  as=\"select\"\n                  readOnly\n                  value={\n                    patientWithId.patientInformation[0]\n                      ? patientWithId.patientInformation[0].patient.gender\n                      : \"Not availble\"\n                  }\n                >\n                  <option>Male</option>\n                  <option>Female</option>\n                  <option>Other</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Form.Group controlId=\"formGridAddress\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Address\"\n                readOnly\n                value={\n                  patientWithId.patientInformation[0]\n                    ? patientWithId.patientInformation[0].patient.address\n                    : \"Not availble\"\n                }\n              />\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Col sm={6}>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  readOnly\n                  value={\n                    patientWithId.patientInformation[0]\n                      ? patientWithId.patientInformation[0].patient.email\n                      : \"Not availble\"\n                  }\n                />\n              </Col>\n              <Col sm={6}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Phone\"\n                  readOnly\n                  value={\n                    patientWithId.patientInformation[0]\n                      ? patientWithId.patientInformation[0].patient.phoneNumber\n                      : \"Not availble\"\n                  }\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Col sm={6}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Insurance Name\"\n                  readOnly\n                  value={\n                    patientWithId.patientInformation[0]\n                      ? patientWithId.patientInformation[0].patient.insurance\n                          .name\n                      : \"Not availble\"\n                  }\n                />\n              </Col>\n              <Col sm={6}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Insurance ID\"\n                  readOnly\n                  value={\n                    patientWithId.patientInformation[0]\n                      ? patientWithId.patientInformation[0].patient.insurance\n                          .insuranceid\n                      : \"Not availble\"\n                  }\n                />\n              </Col>\n            </Form.Group>\n            <div style={{ textAlign: \"center\" }}>\n              \n              <br />\n              <Button\n                variant=\"danger\"\n                type=\"submit\"\n                style={{ marginTop: \"10px\" }}\n                onClick={onDismissPatient}\n              >\n                Dismiss Patient\n              </Button>{\" \"}\n            </div>\n            {/* <div style={{ textAlign: \"center\" }}>\n            <Calendar onChange={\"\"} style={{ width: \"100%\" }} />\n          </div> */}\n          </Form>\n        </div>\n\n        <div className=\"patient-records\">\n          <h4 className=\"patient-form-heading\">Medical Records</h4>{\" \"}\n          <Button\n            style={{ marginBottom: \"10px\" }}\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={() => onAddTreatmentClick()}\n          >\n            Add Treatment\n          </Button>\n          {cards()}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(PatientTreatment);\n"]},"metadata":{},"sourceType":"module"}