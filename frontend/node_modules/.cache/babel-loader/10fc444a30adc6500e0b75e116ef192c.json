{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\Desktop\\\\HCIS\\\\frontend\\\\src\\\\components\\\\profiles\\\\physicians.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../style/patient-profile.css\";\nimport { Form, Col, Button, Row, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { proxy, physicianProfileUpdate, getCurrentPhysician, getPatientWithId, selectedRecordId, logoutUser } from \"../../actions/index\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst PhysicianProfile = props => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"PHYSICIAN\")) {\n      dispatch(logoutUser(props.history));\n    } else {\n      dispatch(getCurrentPhysician());\n      axios.get(`${proxy}/getphysiciandetail`).then(res => {\n        const data = res.data;\n        setName(data.name ? data.name : \"\");\n        setSurname(data.surname ? data.surname : \"\");\n        setAddress(data.address ? data.address : \"\");\n        setEmail(data.email ? data.email : \"\");\n        setPhoneNumber(data.phonenumber ? data.phonenumber : \"\");\n      }).catch(err => alert(err.response.data.message)); // console.log(auth);\n\n      axios.get(`${proxy}/getPatients`).then(res => {\n        setRecords(res.data.list);\n        setLoading(false);\n      }).catch(err => alert(err.response.data.message));\n    }\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name,\n      surname,\n      email,\n      address,\n      phonenumber: phoneNumber\n    };\n    dispatch(physicianProfileUpdate(data));\n  };\n\n  const onPatientSelect = (patientId, recordId) => {\n    // console.log(id);\n    dispatch(selectedRecordId(recordId));\n    dispatch(getPatientWithId(patientId, recordId, props.history));\n  };\n\n  const cards = () => {\n    return records.map(d => React.createElement(Card, {\n      key: d.recordId,\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Record \", d.recordId), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Patient Name: \", d.patientName ? d.patientName : \"Not availble\"), React.createElement(Card.Link, {\n      onClick: () => onPatientSelect(d.patientId, d.recordId),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Details\"))));\n  };\n\n  return loading ? React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    type: \"TailSpin\",\n    color: \"#00BFFF\",\n    height: 100,\n    width: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"main-patient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"patient-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Personal Information\"), React.createElement(Form.Group, {\n    controlId: \"formGridName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: name,\n    onChange: e => setName(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridSurname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: surname,\n    onChange: e => setSurname(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Surname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    type: \"email\",\n    placeholder: \"Enter Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Phone Number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: onSubmit,\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Update Account\"), \" \")), React.createElement(\"div\", {\n    className: \"patient-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Records Overview\"), cards()));\n};\n\nexport default withRouter(PhysicianProfile);","map":{"version":3,"sources":["C:/Users/jonas/Desktop/HCIS/frontend/src/components/profiles/physicians.js"],"names":["React","useState","useEffect","Form","Col","Button","Row","Card","useDispatch","useSelector","proxy","physicianProfileUpdate","getCurrentPhysician","getPatientWithId","selectedRecordId","logoutUser","axios","withRouter","Loader","PhysicianProfile","props","dispatch","auth","state","name","setName","surname","setSurname","email","setEmail","address","setAddress","phoneNumber","setPhoneNumber","records","setRecords","loading","setLoading","localStorage","jwtToken","getItem","history","get","then","res","data","phonenumber","catch","err","alert","response","message","list","onSubmit","e","preventDefault","onPatientSelect","patientId","recordId","cards","map","d","width","patientName","position","top","left","transform","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../style/patient-profile.css\";\nimport { Form, Col, Button, Row, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  proxy,\n  physicianProfileUpdate,\n  getCurrentPhysician,\n  getPatientWithId,\n  selectedRecordId,\n  logoutUser\n} from \"../../actions/index\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst PhysicianProfile = props => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [records, setRecords] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      !(\n        localStorage.jwtToken &&\n        localStorage.getItem(\"userRole\") === \"PHYSICIAN\"\n      )\n    ) {\n      dispatch(logoutUser(props.history));\n    } else {\n      dispatch(getCurrentPhysician());\n      axios\n        .get(`${proxy}/getphysiciandetail`)\n        .then(res => {\n          const data = res.data;\n          setName(data.name ? data.name : \"\");\n          setSurname(data.surname ? data.surname : \"\");\n          setAddress(data.address ? data.address : \"\");\n          setEmail(data.email ? data.email : \"\");\n          setPhoneNumber(data.phonenumber ? data.phonenumber : \"\");\n        })\n        .catch(err => alert(err.response.data.message));\n      // console.log(auth);\n      axios\n        .get(`${proxy}/getPatients`)\n        .then(res => {\n          setRecords(res.data.list);\n          setLoading(false);\n        })\n        .catch(err => alert(err.response.data.message));\n    }\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name,\n      surname,\n      email,\n      address,\n      phonenumber: phoneNumber\n    };\n    dispatch(physicianProfileUpdate(data));\n  };\n\n  const onPatientSelect = (patientId, recordId) => {\n    // console.log(id);\n    dispatch(selectedRecordId(recordId));\n    dispatch(getPatientWithId(patientId, recordId, props.history));\n  };\n\n  const cards = () => {\n    return records.map(d => (\n      <Card key={d.recordId} style={{ width: \"30rem\" }}>\n        <Card.Body>\n          <Card.Title>Record {d.recordId}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            Patient Name: {d.patientName ? d.patientName : \"Not availble\"}\n          </Card.Subtitle>\n          <Card.Link\n            onClick={() => onPatientSelect(d.patientId, d.recordId)}\n            href=\"#\"\n          >\n            Details\n          </Card.Link>\n        </Card.Body>\n      </Card>\n    ));\n  };\n\n  return loading ? (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      }}\n    >\n      <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n    </div>\n  ) : (\n    <div className=\"main-patient\">\n      <div className=\"patient-details\">\n        <Form>\n          <h4 className=\"patient-form-heading\">Personal Information</h4>\n          <Form.Group controlId=\"formGridName\">\n            <Form.Control\n              value={name}\n              onChange={e => setName(e.target.value)}\n              type=\"text\"\n              placeholder=\"Enter Name\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridSurname\">\n            <Form.Control\n              value={surname}\n              onChange={e => setSurname(e.target.value)}\n              type=\"text\"\n              placeholder=\"Enter Surname\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridEmail\">\n            <Form.Control\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              type=\"email\"\n              placeholder=\"Enter Email\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridAddress\">\n            <Form.Control\n              value={address}\n              onChange={e => setAddress(e.target.value)}\n              type=\"text\"\n              placeholder=\"Enter Address\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridPhone\">\n            <Form.Control\n              value={phoneNumber}\n              onChange={e => setPhoneNumber(e.target.value)}\n              type=\"text\"\n              placeholder=\"Enter Phone Number\"\n            />\n          </Form.Group>\n          <Button onClick={onSubmit} variant=\"primary\" type=\"submit\">\n            Update Account\n          </Button>{\" \"}\n        </Form>\n      </div>\n\n      <div className=\"patient-records\">\n        <h4 className=\"patient-form-heading\">Records Overview</h4>\n        {cards()}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(PhysicianProfile);\n"]},"metadata":{},"sourceType":"module"}