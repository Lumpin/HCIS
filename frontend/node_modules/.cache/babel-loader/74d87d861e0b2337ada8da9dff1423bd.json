{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\Desktop\\\\HCIS\\\\frontend\\\\src\\\\components\\\\profiles\\\\patients.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../style/patient-profile.css\";\nimport { Form, Col, Button, Row, Card, Alert } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { proxy, getMedicalRecord, patientProfileUpdate, updatePatientInsurance, getCurrentPatient, getCurrentPatientInsurance, logoutUser } from \"../../actions/index\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst PatientProfile = props => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [insuranceName, setInsuranceName] = useState(\"\");\n  const [insuranceId, setInsuranceId] = useState(\"\");\n  const [medicalRecords, setMedicalRecords] = useState([]);\n  const [showErr, setShowErr] = useState(false);\n  const [showSucc, setShowSucc] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"PATIENT\")) {\n      dispatch(logoutUser(props.history));\n    } else {\n      dispatch(getCurrentPatient());\n      dispatch(getCurrentPatientInsurance());\n      axios.get(`${proxy}/getpatientdetails`).then(res => {\n        const data = res.data;\n        setName(data.name ? data.name : \"\");\n        setSurname(data.surname ? data.surname : \"\");\n        setGender(data.gender ? data.gender : \"\");\n        setDate(data.date ? data.date : \"\");\n        setAddress(data.address ? data.address : \"\");\n        setEmail(data.email ? data.email : \"\");\n        setPhoneNumber(data.phoneNumber ? data.phoneNumber : \"\");\n      }).catch(err => setShowErr(true));\n      axios.get(`${proxy}/getpatientinsurancedetails`).then(res => {\n        const data = res.data;\n        setInsuranceName(data.name ? data.name : \"\");\n        setInsuranceId(data.insuranceid ? data.insuranceid : \"\");\n      }).catch(err => setShowErr(true));\n      axios.get(`${proxy}/getmedicalrecords`).then(res => {\n        setMedicalRecords(res.data.medicalListDtoList);\n        setLoading(false);\n      }).catch(err => setShowErr(true));\n    }\n  }, []);\n\n  function AlertDismissibleError() {\n    if (showErr) {\n      return React.createElement(Alert, {\n        variant: \"danger\",\n        onClose: () => setShowErr(false),\n        dismissible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Error: Internal Server Error!\"));\n    }\n\n    return \"\";\n  }\n\n  function AlertDismissibleSuccess() {\n    if (showSucc) {\n      return React.createElement(Alert, {\n        variant: \"success\",\n        onClose: () => setShowSucc(false),\n        dismissible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Patient successfully deleted!\"));\n    }\n\n    return \"\";\n  }\n\n  const onProfileSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name,\n      date,\n      surname,\n      gender,\n      address,\n      email,\n      phoneNumber\n    }; // console.log(data);\n\n    dispatch(patientProfileUpdate(data));\n  };\n\n  const onInsuranceSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name: insuranceName,\n      insuranceid: insuranceId\n    }; // console.log(data);\n\n    dispatch(updatePatientInsurance(data));\n  };\n\n  const onRecordSelect = recordId => {\n    // console.log(recordId);\n    dispatch(getMedicalRecord(recordId, \"PATIENT\", props.history)); // to=\"/profile/patient/data\"\n  };\n\n  const cards = () => {\n    return medicalRecords.map(d => React.createElement(Card, {\n      key: d.id,\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Record Data \" + d.id), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Physician Name: \" + d.physicianName), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, d.date), React.createElement(Card.Link, {\n      onClick: () => onRecordSelect(d.id),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Details\"))));\n  };\n\n  return loading ? React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    type: \"TailSpin\",\n    color: \"#00BFFF\",\n    height: 100,\n    width: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"main-patient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"patient-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Personal Information\"), React.createElement(AlertDismissibleError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(AlertDismissibleSuccess, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    controlId: \"formGridName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: name,\n    onChange: e => setName(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridSurname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: surname,\n    onChange: e => setSurname(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Surname\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Date of Birth:\"), React.createElement(Col, {\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    placeholderText: \"Click to select a date\",\n    selected: Date.parse(date),\n    onChange: d => setDate(d),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    controlId: \"formGridEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Address\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Gender:\"), React.createElement(Col, {\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: gender,\n    onChange: e => setGender(e.target.value),\n    as: \"select\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Male\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Female\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Other\")))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    type: \"email\",\n    placeholder: \"Enter Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Phone Number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    style: {\n      marginBottom: \"15px\"\n    },\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: onProfileSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Update Account\"), \" \", React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formHorizontalEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: insuranceName,\n    onChange: e => setInsuranceName(e.target.value),\n    type: \"text\",\n    placeholder: \"Insurance Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    value: insuranceId,\n    onChange: e => setInsuranceId(e.target.value),\n    type: \"text\",\n    placeholder: \"Insurance ID\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  })), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: onInsuranceSubmit,\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Update Insurance\"), \" \")), React.createElement(Button, {\n    style: {\n      marginBottom: \"15px\"\n    },\n    variant: \"danger\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"Delete Account\"))), React.createElement(\"div\", {\n    className: \"patient-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"Medical Records\"), \" \", React.createElement(Button, {\n    style: {\n      marginBottom: \"8px\"\n    },\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: () => name && surname ? props.history.push(\"/patient/appoint/physician\") : alert(\"Please update your profile, before creating a record\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, \"Create Appointment\"), cards() ? cards() : \"Nothing to show here\"));\n};\n\nexport default withRouter(PatientProfile);","map":{"version":3,"sources":["C:/Users/jonas/Desktop/HCIS/frontend/src/components/profiles/patients.js"],"names":["React","useState","useEffect","Form","Col","Button","Row","Card","Alert","useDispatch","useSelector","proxy","getMedicalRecord","patientProfileUpdate","updatePatientInsurance","getCurrentPatient","getCurrentPatientInsurance","logoutUser","withRouter","axios","DatePicker","Loader","PatientProfile","props","dispatch","auth","state","name","setName","surname","setSurname","gender","setGender","date","setDate","address","setAddress","email","setEmail","phoneNumber","setPhoneNumber","insuranceName","setInsuranceName","insuranceId","setInsuranceId","medicalRecords","setMedicalRecords","showErr","setShowErr","showSucc","setShowSucc","loading","setLoading","localStorage","jwtToken","getItem","history","get","then","res","data","catch","err","insuranceid","medicalListDtoList","AlertDismissibleError","AlertDismissibleSuccess","onProfileSubmit","e","preventDefault","onInsuranceSubmit","onRecordSelect","recordId","cards","map","d","id","width","physicianName","position","top","left","transform","target","value","Date","parse","marginBottom","push","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../style/patient-profile.css\";\nimport { Form, Col, Button, Row, Card, Alert } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  proxy,\n  getMedicalRecord,\n  patientProfileUpdate,\n  updatePatientInsurance,\n  getCurrentPatient,\n  getCurrentPatientInsurance,\n  logoutUser\n} from \"../../actions/index\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst PatientProfile = props => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [insuranceName, setInsuranceName] = useState(\"\");\n  const [insuranceId, setInsuranceId] = useState(\"\");\n  const [medicalRecords, setMedicalRecords] = useState([]);\n  const [showErr, setShowErr] = useState(false);\n  const [showSucc, setShowSucc] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      !(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"PATIENT\")\n    ) {\n      dispatch(logoutUser(props.history));\n    } else {\n      dispatch(getCurrentPatient());\n      dispatch(getCurrentPatientInsurance());\n      axios\n        .get(`${proxy}/getpatientdetails`)\n        .then(res => {\n          const data = res.data;\n          setName(data.name ? data.name : \"\");\n          setSurname(data.surname ? data.surname : \"\");\n          setGender(data.gender ? data.gender : \"\");\n          setDate(data.date ? data.date : \"\");\n          setAddress(data.address ? data.address : \"\");\n          setEmail(data.email ? data.email : \"\");\n          setPhoneNumber(data.phoneNumber ? data.phoneNumber : \"\");\n        })\n        .catch(err => setShowErr(true));\n      axios\n        .get(`${proxy}/getpatientinsurancedetails`)\n        .then(res => {\n          const data = res.data;\n          setInsuranceName(data.name ? data.name : \"\");\n          setInsuranceId(data.insuranceid ? data.insuranceid : \"\");\n        })\n        .catch(err => setShowErr(true));\n      axios\n        .get(`${proxy}/getmedicalrecords`)\n        .then(res => {\n          setMedicalRecords(res.data.medicalListDtoList);\n          setLoading(false);\n        })\n        .catch(err => setShowErr(true));\n    }\n  }, []);\n\n  function AlertDismissibleError() {\n    if (showErr) {\n      return (\n        <Alert variant=\"danger\" onClose={() => setShowErr(false)} dismissible>\n          <Alert.Heading>Error: Internal Server Error!</Alert.Heading>\n        </Alert>\n      );\n    }\n    return \"\";\n  }\n\n  function AlertDismissibleSuccess() {\n    if (showSucc) {\n      return (\n        <Alert variant=\"success\" onClose={() => setShowSucc(false)} dismissible>\n          <Alert.Heading>Patient successfully deleted!</Alert.Heading>\n        </Alert>\n      );\n    }\n    return \"\";\n  }\n\n  const onProfileSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name,\n      date,\n      surname,\n      gender,\n      address,\n      email,\n      phoneNumber\n    };\n    // console.log(data);\n    dispatch(patientProfileUpdate(data));\n  };\n  const onInsuranceSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name: insuranceName,\n      insuranceid: insuranceId\n    };\n    // console.log(data);\n    dispatch(updatePatientInsurance(data));\n  };\n\n  const onRecordSelect = recordId => {\n    // console.log(recordId);\n    dispatch(getMedicalRecord(recordId, \"PATIENT\", props.history));\n    // to=\"/profile/patient/data\"\n  };\n\n  const cards = () => {\n    return medicalRecords.map(d => (\n      <Card key={d.id} style={{ width: \"30rem\" }}>\n        <Card.Body>\n          <Card.Title>{\"Record Data \" + d.id}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            {\"Physician Name: \" + d.physicianName}\n          </Card.Subtitle>\n          <Card.Text>{d.date}</Card.Text>\n          <Card.Link onClick={() => onRecordSelect(d.id)} href=\"#\">\n            Details\n          </Card.Link>\n        </Card.Body>\n      </Card>\n    ));\n  };\n\n  return loading ? (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      }}\n    >\n      <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n    </div>\n  ) : (\n    <div className=\"main-patient\">\n      <div className=\"patient-details\">\n        <Form>\n          <h4 className=\"patient-form-heading\">Personal Information</h4>\n          <AlertDismissibleError />\n          <AlertDismissibleSuccess />\n          <Form.Group controlId=\"formGridName\">\n            <Form.Control\n              value={name}\n              onChange={e => setName(e.target.value)}\n              type=\"text\"\n              placeholder=\"Enter Name\"\n              required\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridSurname\">\n            <Form.Control\n              value={surname}\n              onChange={e => setSurname(e.target.value)}\n              type=\"text\"\n              placeholder=\"Enter Surname\"\n              required\n            />\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n            <Form.Label column sm={4}>\n              Date of Birth:\n            </Form.Label>\n            <Col sm={8}>\n              <DatePicker\n                placeholderText=\"Click to select a date\"\n                selected={Date.parse(date)}\n                onChange={d => setDate(d)}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group controlId=\"formGridEmail\">\n            <Form.Control\n              value={address}\n              onChange={e => setAddress(e.target.value)}\n              type=\"text\"\n              placeholder=\"Enter Address\"\n              required\n            />\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n            <Form.Label column sm={4}>\n              Gender:\n            </Form.Label>\n            <Col sm={8}>\n              <Form.Control\n                value={gender}\n                onChange={e => setGender(e.target.value)}\n                as=\"select\"\n                required\n              >\n                <option></option>\n                <option>Male</option>\n                <option>Female</option>\n                <option>Other</option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n            <Col sm={6}>\n              <Form.Control\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                type=\"email\"\n                placeholder=\"Enter Email\"\n              />\n            </Col>\n            <Col sm={6}>\n              <Form.Control\n                value={phoneNumber}\n                onChange={e => setPhoneNumber(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Phone Number\"\n                required\n              />\n            </Col>\n          </Form.Group>\n          <Button\n            style={{ marginBottom: \"15px\" }}\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={onProfileSubmit}\n          >\n            Update Account\n          </Button>{\" \"}\n          <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n            <Col sm={4}>\n              <Form.Control\n                value={insuranceName}\n                onChange={e => setInsuranceName(e.target.value)}\n                type=\"text\"\n                placeholder=\"Insurance Name\"\n                required\n              />\n            </Col>\n            <Col sm={4}>\n              <Form.Control\n                value={insuranceId}\n                onChange={e => setInsuranceId(e.target.value)}\n                type=\"text\"\n                placeholder=\"Insurance ID\"\n                required\n              />\n            </Col>\n            <Col sm={4}>\n              <Button\n                onClick={onInsuranceSubmit}\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Update Insurance\n              </Button>{\" \"}\n            </Col>\n          </Form.Group>\n          <Button\n            style={{ marginBottom: \"15px\" }}\n            variant=\"danger\"\n            type=\"submit\"\n          >\n            Delete Account\n          </Button>\n        </Form>\n      </div>\n\n      <div className=\"patient-records\">\n        <h4 className=\"patient-form-heading\">Medical Records</h4>{\" \"}\n        <Button\n          style={{ marginBottom: \"8px\" }}\n          variant=\"primary\"\n          type=\"submit\"\n          onClick={() =>\n            name && surname\n              ? props.history.push(\"/patient/appoint/physician\")\n              : alert(\"Please update your profile, before creating a record\")\n          }\n        >\n          Create Appointment\n        </Button>\n        {cards() ? cards() : \"Nothing to show here\"}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(PatientProfile);\n"]},"metadata":{},"sourceType":"module"}