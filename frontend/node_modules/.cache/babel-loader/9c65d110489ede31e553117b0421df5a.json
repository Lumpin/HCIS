{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\Desktop\\\\HCIS\\\\frontend\\\\src\\\\components\\\\physiciansComponents\\\\medicalRecordDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Button, Row, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { proxy, selectedRecordId, getMedicalRecordWithId, logoutUser } from \"../../actions/index\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\n\nconst MeicalRecordDetails = props => {\n  const dispatch = useDispatch();\n  const seletedRecord = useSelector(state => state.seletedRecord);\n  const [recordId, setRecordId] = useState(\"\");\n  const [anamneses, setAnamneses] = useState(\"\");\n  const [diagnoses, setDiagnoses] = useState(\"\");\n  const [locationOfTreatment, setLocationOfTreatment] = useState(\"\");\n  const [medicalFindings, setMedicalFindings] = useState(\"\");\n  const [medications, setMedications] = useState(\"\");\n  const [medicalLetter, setMedicalLetter] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [treatmentDate, setTreatmentDate] = useState(new Date());\n  useEffect(() => {\n    if (!(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"PHYSICIAN\")) {\n      dispatch(logoutUser(props.history));\n    }\n\n    if (seletedRecord.recordData.treatment) {\n      dispatch(selectedRecordId(seletedRecord.recordData.id));\n      setRecordId(seletedRecord.recordData.id);\n      setAnamneses(seletedRecord.recordData.treatment.anamneses);\n      setDiagnoses(seletedRecord.recordData.treatment.diagnoses);\n      setLocationOfTreatment(seletedRecord.recordData.treatment.locationOfTreatment);\n      setMedicalFindings(seletedRecord.recordData.treatment.medicalFindings);\n      setMedications(seletedRecord.recordData.treatment.medications);\n      setMedicalLetter(seletedRecord.recordData.treatment.medicalLetter);\n      setTreatmentDate(seletedRecord.recordData.treatment.treatmentDate);\n      setStatus(seletedRecord.recordData.treatment.status);\n    } else {\n      if (props.location.state.id) {\n        dispatch(selectedRecordId(props.location.state.id));\n        dispatch(getMedicalRecordWithId(props.location.state.id, props.history));\n        axios.get(`${proxy}/getmedicalrecordbyid/?medicalid=${props.location.state.id}`).then(res => {\n          setRecordId(res.data.id);\n          setAnamneses(res.data.treatment.anamneses);\n          setDiagnoses(res.data.treatment.diagnoses);\n          setLocationOfTreatment(res.data.treatment.locationOfTreatment);\n          setMedicalFindings(res.data.treatment.medicalFindings);\n          setMedications(res.data.treatment.medications);\n          setMedicalLetter(res.data.treatment.medicalLetter);\n          setTreatmentDate(res.data.treatment.treatmentDate);\n          setStatus(res.data.treatment.status);\n        }).catch(err => alert(err.response.data.message));\n      } else {\n        props.history.push(\"/physician/profile\");\n      }\n    }\n  }, []);\n\n  const onTreatmentUpdate = e => {\n    // console.log(seletedRecord.recordData);\n    e.preventDefault();\n    const data = {\n      anamneses,\n      diagnoses,\n      locationOfTreatment,\n      medicalFindings,\n      medications,\n      medicalLetter,\n      status,\n      treatmentDate\n    };\n    axios.put(`${proxy}/updatetreatment/?recordId=${recordId}`, data).then(res => alert(\"Treatment Successfully Updated\")).catch(err => alert(err.response.data.message)); // console.log(data);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/physician/patient/treatment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      margin: \"5px 5px 5px 20px\",\n      padding: \"5px 25px 5px 25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\u2190 Go Back\"))), React.createElement(\"div\", {\n    style: {\n      width: \"90vw\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Edit Medical Record\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formanamneses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Anamneses\"), React.createElement(Col, {\n    sm: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => setAnamneses(e.target.value),\n    placeholder: \"Anamneses\",\n    value: anamneses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formdiagnoses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Diagnoses\"), React.createElement(Col, {\n    sm: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => setDiagnoses(e.target.value),\n    placeholder: \"Diagnoses\",\n    value: diagnoses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formanamneses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Location Of Treatment\"), React.createElement(Col, {\n    sm: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => setLocationOfTreatment(e.target.value),\n    placeholder: \"Location Of Treatment\",\n    value: locationOfTreatment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formanamneses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Medical Findings\"), React.createElement(Col, {\n    sm: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => setMedicalFindings(e.target.value),\n    placeholder: \"Medical Findings\",\n    value: medicalFindings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formanamneses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Medications\"), React.createElement(Col, {\n    sm: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => setMedications(e.target.value),\n    placeholder: \"Medications\",\n    value: medications,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formanamneses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Medical Letter\"), React.createElement(Col, {\n    sm: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => setMedicalLetter(e.target.value),\n    placeholder: \"Medical Letter\",\n    value: medicalLetter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"formanamneses\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    column: true,\n    sm: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Treatment Date\"), React.createElement(Col, {\n    sm: \"10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    placeholderText: \"Click to select a date\",\n    selected: treatmentDate ? Date.parse(treatmentDate) : \"\",\n    onChange: d => setTreatmentDate(d),\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    onClick: onTreatmentUpdate,\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      margin: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Update Treatment\"), \" \")));\n};\n\nexport default withRouter(MeicalRecordDetails);","map":{"version":3,"sources":["C:/Users/jonas/Desktop/HCIS/frontend/src/components/physiciansComponents/medicalRecordDetails.js"],"names":["React","useState","useEffect","PropTypes","Form","Col","Button","Row","Card","useDispatch","useSelector","withRouter","Link","proxy","selectedRecordId","getMedicalRecordWithId","logoutUser","axios","DatePicker","moment","MeicalRecordDetails","props","dispatch","seletedRecord","state","recordId","setRecordId","anamneses","setAnamneses","diagnoses","setDiagnoses","locationOfTreatment","setLocationOfTreatment","medicalFindings","setMedicalFindings","medications","setMedications","medicalLetter","setMedicalLetter","status","setStatus","treatmentDate","setTreatmentDate","Date","localStorage","jwtToken","getItem","history","recordData","treatment","id","location","get","then","res","data","catch","err","alert","response","message","push","onTreatmentUpdate","e","preventDefault","put","textAlign","margin","padding","width","target","value","parse","d"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Col, Button, Row, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport {\n  proxy,\n  selectedRecordId,\n  getMedicalRecordWithId,\n  logoutUser\n} from \"../../actions/index\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment'\n\nconst MeicalRecordDetails = props => {\n  const dispatch = useDispatch();\n  const seletedRecord = useSelector(state => state.seletedRecord);\n  const [recordId, setRecordId] = useState(\"\");\n  const [anamneses, setAnamneses] = useState(\"\");\n  const [diagnoses, setDiagnoses] = useState(\"\");\n  const [locationOfTreatment, setLocationOfTreatment] = useState(\"\");\n  const [medicalFindings, setMedicalFindings] = useState(\"\");\n  const [medications, setMedications] = useState(\"\");\n  const [medicalLetter, setMedicalLetter] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [treatmentDate, setTreatmentDate] = useState(new Date());\n\n  useEffect(() => {\n    if (\n      !(\n        localStorage.jwtToken &&\n        localStorage.getItem(\"userRole\") === \"PHYSICIAN\"\n      )\n    ) {\n      dispatch(logoutUser(props.history));\n    }\n    if (seletedRecord.recordData.treatment) {\n      dispatch(selectedRecordId(seletedRecord.recordData.id));\n      setRecordId(seletedRecord.recordData.id);\n      setAnamneses(seletedRecord.recordData.treatment.anamneses);\n      setDiagnoses(seletedRecord.recordData.treatment.diagnoses);\n      setLocationOfTreatment(\n        seletedRecord.recordData.treatment.locationOfTreatment\n      );\n      setMedicalFindings(seletedRecord.recordData.treatment.medicalFindings);\n      setMedications(seletedRecord.recordData.treatment.medications);\n      setMedicalLetter(seletedRecord.recordData.treatment.medicalLetter);\n      setTreatmentDate(seletedRecord.recordData.treatment.treatmentDate);\n      setStatus(seletedRecord.recordData.treatment.status);\n    } else {\n      if (props.location.state.id) {\n        dispatch(selectedRecordId(props.location.state.id));\n        dispatch(\n          getMedicalRecordWithId(props.location.state.id, props.history)\n        );\n        axios\n          .get(\n            `${proxy}/getmedicalrecordbyid/?medicalid=${props.location.state.id}`\n          )\n          .then(res => {\n            setRecordId(res.data.id);\n            setAnamneses(res.data.treatment.anamneses);\n            setDiagnoses(res.data.treatment.diagnoses);\n            setLocationOfTreatment(res.data.treatment.locationOfTreatment);\n            setMedicalFindings(res.data.treatment.medicalFindings);\n            setMedications(res.data.treatment.medications);\n            setMedicalLetter(res.data.treatment.medicalLetter);\n            setTreatmentDate(res.data.treatment.treatmentDate);\n            setStatus(res.data.treatment.status);\n          })\n          .catch(err => alert(err.response.data.message));\n      } else {\n        props.history.push(\"/physician/profile\");\n      }\n    }\n  }, []);\n\n  const onTreatmentUpdate = e => {\n    // console.log(seletedRecord.recordData);\n    e.preventDefault();\n    const data = {\n      anamneses,\n      diagnoses,\n      locationOfTreatment,\n      medicalFindings,\n      medications,\n      medicalLetter,\n      status,\n      treatmentDate\n    };\n    axios\n      .put(`${proxy}/updatetreatment/?recordId=${recordId}`, data)\n      .then(res => alert(\"Treatment Successfully Updated\"))\n      .catch(err => alert(err.response.data.message));\n    // console.log(data);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div style={{ textAlign: \"left\" }}>\n        <Link to=\"/physician/patient/treatment\">\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            style={{ margin: \"5px 5px 5px 20px\", padding: \"5px 25px 5px 25px\" }}\n          >\n            &#8592; Go Back\n          </Button>\n        </Link>\n      </div>\n      <div style={{ width: \"90vw\" }}>\n        <h1>Edit Medical Record</h1>\n        {/* {console.log(props.location.state.id)} */}\n        <Form>\n          <Form.Group as={Row} controlId=\"formanamneses\">\n            <Form.Label column sm=\"2\">\n              Anamneses\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                onChange={e => setAnamneses(e.target.value)}\n                placeholder=\"Anamneses\"\n                value={anamneses}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formdiagnoses\">\n            <Form.Label column sm=\"2\">\n              Diagnoses\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                onChange={e => setDiagnoses(e.target.value)}\n                placeholder=\"Diagnoses\"\n                value={diagnoses}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formanamneses\">\n            <Form.Label column sm=\"2\">\n              Location Of Treatment\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                onChange={e => setLocationOfTreatment(e.target.value)}\n                placeholder=\"Location Of Treatment\"\n                value={locationOfTreatment}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formanamneses\">\n            <Form.Label column sm=\"2\">\n              Medical Findings\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                onChange={e => setMedicalFindings(e.target.value)}\n                placeholder=\"Medical Findings\"\n                value={medicalFindings}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formanamneses\">\n            <Form.Label column sm=\"2\">\n              Medications\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                onChange={e => setMedications(e.target.value)}\n                placeholder=\"Medications\"\n                value={medications}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formanamneses\">\n            <Form.Label column sm=\"2\">\n              Medical Letter\n            </Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                onChange={e => setMedicalLetter(e.target.value)}\n                placeholder=\"Medical Letter\"\n                value={medicalLetter}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"formanamneses\">\n            <Form.Label column sm=\"2\">\n              Treatment Date\n            </Form.Label>\n            <Col sm=\"10\">\n\n                  <DatePicker\n                    placeholderText=\"Click to select a date\"\n                    selected={treatmentDate ? Date.parse(treatmentDate) : \"\"}\n                    onChange={d => setTreatmentDate(d)}\n                    inline\n                  />\n\n\n            </Col>\n          </Form.Group>\n          <Button\n            onClick={onTreatmentUpdate}\n            variant=\"primary\"\n            type=\"submit\"\n            style={{ margin: \"30px\" }}\n          >\n            Update Treatment\n          </Button>{\" \"}\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(MeicalRecordDetails);\n"]},"metadata":{},"sourceType":"module"}