{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\Desktop\\\\HCIS\\\\frontend\\\\src\\\\components\\\\adminComponents\\\\deletePatient.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Col, Button, Row, Card, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { proxy } from \"../../actions/index\";\nimport { withRouter } from \"react-router-dom\";\nimport { logoutUser } from \"../../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst DeletePatient = props => {\n  const dispatch = useDispatch();\n  const [patients, setPatients] = useState([]);\n  const [success, setSuccess] = useState({});\n  const [error, setError] = useState({});\n  const [showErr, setShowErr] = useState(false);\n  const [showSucc, setShowSucc] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"ADMIN\")) {\n      dispatch(logoutUser(props.history));\n    }\n\n    axios.get(`${proxy}/admin/getallpatients`).then(res => {\n      setPatients(res.data.getAllPatientDtos);\n      setLoading(false);\n    }).catch(err => alert(err.response.data.message));\n  }, []);\n\n  function AlertDismissibleError() {\n    if (showErr) {\n      return React.createElement(Alert, {\n        variant: \"danger\",\n        onClose: () => setShowErr(false),\n        dismissible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Error: Can not delete Patient!\"));\n    }\n\n    return \"\";\n  }\n\n  function AlertDismissibleSuccess() {\n    if (showSucc) {\n      return React.createElement(Alert, {\n        variant: \"success\",\n        onClose: () => setShowSucc(false),\n        dismissible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Patient successfully deleted!\"));\n    }\n\n    return \"\";\n  }\n\n  const onPatientSelect = d => {\n    axios.post(`${proxy}/admin/deletePatient/?patientId=${d}`).then(res => setPatients(patients.filter(p => p.id !== d))).then(res => setShowSucc(true)).catch(err => setShowErr(true));\n  };\n\n  const cards = () => {\n    return patients.map(d => React.createElement(Card, {\n      key: d.id,\n      style: {\n        width: \"50vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, d.name + \" \" + d.surname), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, d.email ? d.email : \"Not Availble\"), React.createElement(Button, {\n      variant: \"danger\",\n      type: \"submit\",\n      onClick: () => onPatientSelect(d.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Delete\"))));\n  };\n\n  return loading ? React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    type: \"TailSpin\",\n    color: \"#00BFFF\",\n    height: 100,\n    width: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    style: {\n      marginBottom: \"20px\",\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Delete Patient\"), \" \", React.createElement(AlertDismissibleError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(AlertDismissibleSuccess, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), cards()));\n};\n\nexport default withRouter(DeletePatient);","map":{"version":3,"sources":["C:/Users/jonas/Desktop/HCIS/frontend/src/components/adminComponents/deletePatient.js"],"names":["React","useState","useEffect","Form","Col","Button","Row","Card","Alert","axios","proxy","withRouter","logoutUser","useDispatch","Loader","DeletePatient","props","dispatch","patients","setPatients","success","setSuccess","error","setError","showErr","setShowErr","showSucc","setShowSucc","loading","setLoading","localStorage","jwtToken","getItem","history","get","then","res","data","getAllPatientDtos","catch","err","alert","response","message","AlertDismissibleError","AlertDismissibleSuccess","onPatientSelect","d","post","filter","p","id","cards","map","width","name","surname","email","position","top","left","transform","display","flexDirection","justifyContent","alignItems","marginBottom","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,KAAvC,QAAoD,iBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,+DAAP;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QACE,EAAE4B,YAAY,CAACC,QAAb,IAAyBD,YAAY,CAACE,OAAb,CAAqB,UAArB,MAAqC,OAAhE,CADF,EAEE;AACAf,MAAAA,QAAQ,CAACL,UAAU,CAACI,KAAK,CAACiB,OAAP,CAAX,CAAR;AACD;;AACDxB,IAAAA,KAAK,CACFyB,GADH,CACQ,GAAExB,KAAM,uBADhB,EAEGyB,IAFH,CAEQC,GAAG,IAAI;AACXjB,MAAAA,WAAW,CAACiB,GAAG,CAACC,IAAJ,CAASC,iBAAV,CAAX;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,EAMGU,KANH,CAMSC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,OAAnB,CANrB;AAOD,GAbQ,EAaN,EAbM,CAAT;;AAeA,WAASC,qBAAT,GAAiC;AAC/B,QAAIpB,OAAJ,EAAa;AACX,aACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD,CAAjD;AAA0D,QAAA,WAAW,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADF;AAKD;;AACD,WAAO,EAAP;AACD;;AAED,WAASoB,uBAAT,GAAmC;AACjC,QAAInB,QAAJ,EAAc;AACZ,aACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,KAAD,CAAnD;AAA4D,QAAA,WAAW,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CADF;AAKD;;AACD,WAAO,EAAP;AACD;;AAED,QAAMmB,eAAe,GAAGC,CAAC,IAAI;AAC3BtC,IAAAA,KAAK,CACFuC,IADH,CACS,GAAEtC,KAAM,mCAAkCqC,CAAE,EADrD,EAEGZ,IAFH,CAEQC,GAAG,IAAIjB,WAAW,CAACD,QAAQ,CAAC+B,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,CAA9B,CAAD,CAF1B,EAGGZ,IAHH,CAGQC,GAAG,IAAIT,WAAW,CAAC,IAAD,CAH1B,EAIGY,KAJH,CAISC,GAAG,IAAIf,UAAU,CAAC,IAAD,CAJ1B;AAKD,GAND;;AAQA,QAAM2B,KAAK,GAAG,MAAM;AAClB,WAAOlC,QAAQ,CAACmC,GAAT,CAAaN,CAAC,IACnB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAC,CAACI,EAAb;AAAiB,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaP,CAAC,CAACQ,IAAF,GAAS,GAAT,GAAeR,CAAC,CAACS,OAA9B,CADF,EAEE,oBAAC,IAAD,CAAM,QAAN;AAAe,MAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,CAAC,CAACU,KAAF,GAAUV,CAAC,CAACU,KAAZ,GAAoB,cADvB,CAFF,EAKE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,QADV;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAE,MAAMX,eAAe,CAACC,CAAC,CAACI,EAAH,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF,CADK,CAAP;AAiBD,GAlBD;;AAoBA,SAAOvB,OAAO,GACZ;AACE,IAAA,KAAK,EAAE;AACL8B,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,GAAG,EAAE,KAFA;AAGLC,MAAAA,IAAI,EAAE,KAHD;AAILC,MAAAA,SAAS,EAAE;AAJN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAwC,IAAA,MAAM,EAAE,GAAhD;AAAqD,IAAA,KAAK,EAAE,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADY,GAYZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,aAAa,EAAE,QAFV;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,MAAhB;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,EAaQ,GAbR,EAcE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBGf,KAAK,EAhBR,CADF,CAZF;AAiCD,CA3GD;;AA6GA,eAAezC,UAAU,CAACI,aAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Col, Button, Row, Card, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { proxy } from \"../../actions/index\";\nimport { withRouter } from \"react-router-dom\";\nimport { logoutUser } from \"../../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst DeletePatient = props => {\n  const dispatch = useDispatch();\n  const [patients, setPatients] = useState([]);\n  const [success, setSuccess] = useState({});\n  const [error, setError] = useState({});\n  const [showErr, setShowErr] = useState(false);\n  const [showSucc, setShowSucc] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      !(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"ADMIN\")\n    ) {\n      dispatch(logoutUser(props.history));\n    }\n    axios\n      .get(`${proxy}/admin/getallpatients`)\n      .then(res => {\n        setPatients(res.data.getAllPatientDtos);\n        setLoading(false);\n      })\n      .catch(err => alert(err.response.data.message));\n  }, []);\n\n  function AlertDismissibleError() {\n    if (showErr) {\n      return (\n        <Alert variant=\"danger\" onClose={() => setShowErr(false)} dismissible>\n          <Alert.Heading>Error: Can not delete Patient!</Alert.Heading>\n        </Alert>\n      );\n    }\n    return \"\";\n  }\n\n  function AlertDismissibleSuccess() {\n    if (showSucc) {\n      return (\n        <Alert variant=\"success\" onClose={() => setShowSucc(false)} dismissible>\n          <Alert.Heading>Patient successfully deleted!</Alert.Heading>\n        </Alert>\n      );\n    }\n    return \"\";\n  }\n\n  const onPatientSelect = d => {\n    axios\n      .post(`${proxy}/admin/deletePatient/?patientId=${d}`)\n      .then(res => setPatients(patients.filter(p => p.id !== d)))\n      .then(res => setShowSucc(true))\n      .catch(err => setShowErr(true));\n  };\n\n  const cards = () => {\n    return patients.map(d => (\n      <Card key={d.id} style={{ width: \"50vw\" }}>\n        <Card.Body>\n          <Card.Title>{d.name + \" \" + d.surname}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            {d.email ? d.email : \"Not Availble\"}\n          </Card.Subtitle>\n          <Button\n            variant=\"danger\"\n            type=\"submit\"\n            onClick={() => onPatientSelect(d.id)}\n          >\n            Delete\n          </Button>\n        </Card.Body>\n      </Card>\n    ));\n  };\n\n  return loading ? (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      }}\n    >\n      <Loader type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\n    </div>\n  ) : (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <h4\n          className=\"patient-form-heading\"\n          style={{ marginBottom: \"20px\", marginTop: \"10px\" }}\n        >\n          Delete Patient\n        </h4>{\" \"}\n        <AlertDismissibleError />\n        <AlertDismissibleSuccess />\n        {cards()}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(DeletePatient);\n"]},"metadata":{},"sourceType":"module"}