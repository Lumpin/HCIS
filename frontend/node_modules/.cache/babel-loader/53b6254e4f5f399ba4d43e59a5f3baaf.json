{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\Desktop\\\\HCIS\\\\frontend\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"./reducers/index\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { getCurrentPatient } from \"./actions/index\"; // let store;\n//\n// if (process.env.NODE_ENV === \"production\") {\n//   store = createStore(reducers, {}, compose(applyMiddleware(reduxThunk)));\n// } else {\n//   store = createStore(\n//     reducers,\n//     {},\n//     compose(\n//       applyMiddleware(reduxThunk),\n//       window.__REDUX_DEVTOOLS_EXTENSION__ &&\n//         window.__REDUX_DEVTOOLS_EXTENSION__()\n//     )\n//   );\n// }\n\nconst store = createStore(reducers, {}, compose(applyMiddleware(reduxThunk)));\n\nif (localStorage.jwtToken) {\n  // console.log(localStorage.jwtToken);\n  setAuthToken(localStorage.jwtToken);\n  store.dispatch(getCurrentPatient());\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/jonas/Desktop/HCIS/frontend/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","reduxThunk","createStore","applyMiddleware","compose","reducers","setAuthToken","getCurrentPatient","store","localStorage","jwtToken","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,sCAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,iBAAT,QAAkC,iBAAlC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGN,WAAW,CAACG,QAAD,EAAW,EAAX,EAAeD,OAAO,CAACD,eAAe,CAACF,UAAD,CAAhB,CAAtB,CAAzB;;AAEA,IAAIQ,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACAJ,EAAAA,YAAY,CAACG,YAAY,CAACC,QAAd,CAAZ;AACAF,EAAAA,KAAK,CAACG,QAAN,CAAeJ,iBAAiB,EAAhC;AACD;;AAEDV,QAAQ,CAACe,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport reduxThunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"./reducers/index\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { getCurrentPatient } from \"./actions/index\";\n// let store;\n//\n// if (process.env.NODE_ENV === \"production\") {\n//   store = createStore(reducers, {}, compose(applyMiddleware(reduxThunk)));\n// } else {\n//   store = createStore(\n//     reducers,\n//     {},\n//     compose(\n//       applyMiddleware(reduxThunk),\n//       window.__REDUX_DEVTOOLS_EXTENSION__ &&\n//         window.__REDUX_DEVTOOLS_EXTENSION__()\n//     )\n//   );\n// }\nconst store = createStore(reducers, {}, compose(applyMiddleware(reduxThunk)));\n\nif (localStorage.jwtToken) {\n  // console.log(localStorage.jwtToken);\n  setAuthToken(localStorage.jwtToken);\n  store.dispatch(getCurrentPatient());\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}