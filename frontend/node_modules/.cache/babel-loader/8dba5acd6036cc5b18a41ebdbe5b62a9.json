{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\Desktop\\\\HCIS\\\\frontend\\\\src\\\\components\\\\profiles\\\\patientsData.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../style/patient-profile.css\";\nimport { Form, Col, Button, Row, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMedicalRecord, logoutUser } from \"../../actions/index\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst PatientData = props => {\n  const dispatch = useDispatch();\n  const record = useSelector(state => state.record); // const [records, setRecords] = useState({});\n\n  useEffect(() => {\n    if (!localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"ADMIN\") {\n      dispatch(logoutUser(props.history));\n    }\n\n    if (!record.recordData.treatment) {\n      if (props.location.state.state) {\n        dispatch(getMedicalRecord(props.location.state.state, props.location.state.role, props.history));\n      } else {\n        if (props.location.state.role === \"PATIENT\") {\n          props.history.push(\"/patient/profile\");\n        } else if (props.location.state.role === \"PHYSICIAN\") {\n          props.history.push(\"/physician/patient/treatment\");\n        }\n      }\n    }\n  }, []);\n\n  const recordFields = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Anamneses\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, record.recordData.treatment ? record.recordData.treatment.anamneses : \"\"))), React.createElement(Card, {\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Diagnoses\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, record.recordData.treatment ? record.recordData.treatment.diagnoses : \"\"))), React.createElement(Card, {\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Medications\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, record.recordData.treatment ? record.recordData.treatment.medications : \"\"))), React.createElement(Card, {\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Medical Findings\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, record.recordData.treatment ? record.recordData.treatment.medicalFindings : \"\"))), React.createElement(Card, {\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Medical Letter\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, record.recordData.treatment ? record.recordData.treatment.medicalLetter : \"\"))), React.createElement(Card, {\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Location Of Treatment\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, record.recordData.treatment ? record.recordData.treatment.locationOfTreatment : \"\"))), React.createElement(Card, {\n      style: {\n        width: \"30rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Treatment Date:\", \" \", record.recordData.treatment ? React.createElement(DatePicker, {\n      placeholderText: \"Click to select a date\",\n      selected: record.recordData.treatment.treatmentDate ? Date.parse(record.recordData.treatment.treatmentDate) : \"\",\n      inline: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }) : \"Not available\"))));\n  };\n\n  const returnButtonDependingOnRole = () => {\n    if (record.role === \"PATIENT\") {\n      return React.createElement(Link, {\n        to: \"/patient/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        style: {\n          margin: \"5px 5px 5px 20px\",\n          padding: \"5px 25px 5px 25px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"\\u2190 Go Back\"));\n    } else if (record.role === \"PHYSICIAN\") {\n      return React.createElement(Link, {\n        to: \"/physician/patient/treatment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        style: {\n          margin: \"5px 5px 5px 20px\",\n          padding: \"5px 25px 5px 25px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"\\u2190 Go Back\"));\n    }\n  };\n\n  const returnContactButtonDependingOnRole = () => {\n    if (record.role === \"PATIENT\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    } else if (record.role === \"PHYSICIAN\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, returnButtonDependingOnRole()), React.createElement(\"div\", {\n    className: \"main-patient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"patient-records\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Medical Records\"), recordFields()), React.createElement(\"div\", {\n    className: \"patient-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"patient-form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Physician\"), React.createElement(Form.Group, {\n    controlId: \"formGridName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    readOnly: true,\n    defaultValue: record.recordData.physician ? record.recordData.physician.name : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridSurname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Surname\",\n    readOnly: true,\n    defaultValue: record.recordData.physician ? record.recordData.physician.surname : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter Email\",\n    readOnly: true,\n    defaultValue: record.recordData.physician ? record.recordData.physician.email : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridAddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Address\",\n    readOnly: true,\n    defaultValue: record.recordData.physician ? record.recordData.physician.address : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Phone Number\",\n    readOnly: true,\n    defaultValue: record.recordData.physician ? record.recordData.physician.phoneNumber : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"patient-data-form-btns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, returnContactButtonDependingOnRole())))));\n};\n\nexport default PatientData;","map":{"version":3,"sources":["C:/Users/jonas/Desktop/HCIS/frontend/src/components/profiles/patientsData.js"],"names":["React","useState","useEffect","Form","Col","Button","Row","Card","useDispatch","useSelector","getMedicalRecord","logoutUser","withRouter","Link","DatePicker","PatientData","props","dispatch","record","state","localStorage","jwtToken","getItem","history","recordData","treatment","location","role","push","recordFields","width","anamneses","diagnoses","medications","medicalFindings","medicalLetter","locationOfTreatment","treatmentDate","Date","parse","returnButtonDependingOnRole","margin","padding","returnContactButtonDependingOnRole","textAlign","physician","name","surname","email","address","phoneNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../style/patient-profile.css\";\nimport { Form, Col, Button, Row, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMedicalRecord, logoutUser } from \"../../actions/index\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst PatientData = props => {\n  const dispatch = useDispatch();\n  const record = useSelector(state => state.record);\n  // const [records, setRecords] = useState({});\n\n  useEffect(() => {\n    if (\n      !localStorage.jwtToken &&\n      localStorage.getItem(\"userRole\") === \"ADMIN\"\n    ) {\n      dispatch(logoutUser(props.history));\n    }\n\n    if (!record.recordData.treatment) {\n      if (props.location.state.state) {\n        dispatch(\n          getMedicalRecord(\n            props.location.state.state,\n            props.location.state.role,\n            props.history\n          )\n        );\n      } else {\n        if (props.location.state.role === \"PATIENT\") {\n          props.history.push(\"/patient/profile\");\n        } else if (props.location.state.role === \"PHYSICIAN\") {\n          props.history.push(\"/physician/patient/treatment\");\n        }\n      }\n    }\n  }, []);\n\n  const recordFields = () => {\n    return (\n      <div>\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Body>\n            <Card.Title>Anamneses</Card.Title>\n            <Card.Text>\n              {record.recordData.treatment\n                ? record.recordData.treatment.anamneses\n                : \"\"}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Body>\n            <Card.Title>Diagnoses</Card.Title>\n            <Card.Text>\n              {record.recordData.treatment\n                ? record.recordData.treatment.diagnoses\n                : \"\"}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Body>\n            <Card.Title>Medications</Card.Title>\n            <Card.Text>\n              {record.recordData.treatment\n                ? record.recordData.treatment.medications\n                : \"\"}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Body>\n            <Card.Title>Medical Findings</Card.Title>\n            <Card.Text>\n              {record.recordData.treatment\n                ? record.recordData.treatment.medicalFindings\n                : \"\"}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Body>\n            <Card.Title>Medical Letter</Card.Title>\n            <Card.Text>\n              {record.recordData.treatment\n                ? record.recordData.treatment.medicalLetter\n                : \"\"}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Body>\n            <Card.Title>Location Of Treatment</Card.Title>\n            <Card.Text>\n              {record.recordData.treatment\n                ? record.recordData.treatment.locationOfTreatment\n                : \"\"}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Body>\n            <Card.Text>\n              Treatment Date:{\" \"}\n              {record.recordData.treatment\n                ? (\n                  <DatePicker\n                    placeholderText=\"Click to select a date\"\n                    selected={record.recordData.treatment.treatmentDate ? Date.parse(record.recordData.treatment.treatmentDate) : \"\"}\n\n                    inline\n                    disabled\n                  />\n                )\n                : \"Not available\"}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  };\n  const returnButtonDependingOnRole = () => {\n    if (record.role === \"PATIENT\") {\n      return (\n        <Link to=\"/patient/profile\">\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            style={{ margin: \"5px 5px 5px 20px\", padding: \"5px 25px 5px 25px\" }}\n          >\n            &#8592; Go Back\n          </Button>\n        </Link>\n      );\n    } else if (record.role === \"PHYSICIAN\") {\n      return (\n        <Link to=\"/physician/patient/treatment\">\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            style={{ margin: \"5px 5px 5px 20px\", padding: \"5px 25px 5px 25px\" }}\n          >\n            &#8592; Go Back\n          </Button>\n        </Link>\n      );\n    }\n  };\n\n  const returnContactButtonDependingOnRole = () => {\n    if (record.role === \"PATIENT\") {\n      return (\n      <div></div>\n      );\n    } else if (record.role === \"PHYSICIAN\") {\n      return (\n        <div></div>\n      );\n    }\n  };\n\n  return (\n    <>\n      <div style={{ textAlign: \"left\" }}>{returnButtonDependingOnRole()}</div>\n      <div className=\"main-patient\">\n        {/* {console.log(record)} */}\n        {/* {console.log(props.location.state)} */}\n\n        <div className=\"patient-records\">\n          <h4 className=\"patient-form-heading\">Medical Records</h4>\n          {recordFields()}\n        </div>\n        <div className=\"patient-details\">\n          <Form>\n            <h4 className=\"patient-form-heading\">Physician</h4>\n            <Form.Group controlId=\"formGridName\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Name\"\n                readOnly\n                defaultValue={\n                  record.recordData.physician\n                    ? record.recordData.physician.name\n                    : \"\"\n                }\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formGridSurname\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Surname\"\n                readOnly\n                defaultValue={\n                  record.recordData.physician\n                    ? record.recordData.physician.surname\n                    : \"\"\n                }\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formGridEmail\">\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                readOnly\n                defaultValue={\n                  record.recordData.physician\n                    ? record.recordData.physician.email\n                    : \"\"\n                }\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formGridAddress\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Address\"\n                readOnly\n                defaultValue={\n                  record.recordData.physician\n                    ? record.recordData.physician.address\n                    : \"\"\n                }\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formGridPhone\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Phone Number\"\n                readOnly\n                defaultValue={\n                  record.recordData.physician\n                    ? record.recordData.physician.phoneNumber\n                    : \"\"\n                }\n              />\n            </Form.Group>\n            <div className=\"patient-data-form-btns\">\n              {returnContactButtonDependingOnRole()}\n            </div>\n          </Form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PatientData;\n"]},"metadata":{},"sourceType":"module"}