{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonas\\\\Desktop\\\\HCIS\\\\frontend\\\\src\\\\components\\\\auth\\\\phyRegisterbyAdmin.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../style/login.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { physicianRegister, logoutUser } from \"../../actions/index\";\nimport { withRouter } from \"react-router-dom\";\n\nconst PhyRegisterByAdmin = props => {\n  const dispatch = useDispatch();\n  const errors = useSelector(state => state.errors);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setErrors] = useState({});\n  useEffect(() => {\n    if (!(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"ADMIN\")) {\n      dispatch(logoutUser(props.history));\n    }\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const data = {\n      username,\n      password\n    };\n\n    if (username && password) {\n      dispatch(physicianRegister(data, props.history));\n    } else {\n      setErrors({\n        username: \"Please fill the values\"\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Welcome to Admin!\"), React.createElement(\"div\", {\n    className: \"cont\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    action: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"form-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Register Physician\"), React.createElement(\"input\", {\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    type: \"text\",\n    className: \"user\",\n    placeholder: \"Enter the Physician ID\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    className: \"pass\",\n    placeholder: \"Enter Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"register\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontSize: \"25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, error.username), React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      fontSize: \"25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, errors.physicianRegisterError ? errors.physicianRegisterError.data.message : \"\")))));\n};\n\nexport default withRouter(PhyRegisterByAdmin);","map":{"version":3,"sources":["C:/Users/jonas/Desktop/HCIS/frontend/src/components/auth/phyRegisterbyAdmin.js"],"names":["React","useState","useEffect","useDispatch","useSelector","physicianRegister","logoutUser","withRouter","PhyRegisterByAdmin","props","dispatch","errors","state","username","setUsername","password","setPassword","error","setErrors","localStorage","jwtToken","getItem","history","onSubmit","e","preventDefault","data","target","value","color","fontSize","physicianRegisterError","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../style/login.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { physicianRegister, logoutUser } from \"../../actions/index\";\nimport { withRouter } from \"react-router-dom\";\n\nconst PhyRegisterByAdmin = props => {\n  const dispatch = useDispatch();\n  const errors = useSelector(state => state.errors);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setErrors] = useState({});\n\n  useEffect(() => {\n    if (\n      !(localStorage.jwtToken && localStorage.getItem(\"userRole\") === \"ADMIN\")\n    ) {\n      dispatch(logoutUser(props.history));\n    }\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const data = { username, password };\n    if (username && password) {\n      dispatch(physicianRegister(data, props.history));\n    } else {\n      setErrors({ username: \"Please fill the values\" });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Welcome to Admin!</h1>\n      <div className=\"cont\">\n        <div className=\"form\">\n          <form action=\"\">\n            <h1 className=\"form-heading\">Register Physician</h1>\n            <input\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n              type=\"text\"\n              className=\"user\"\n              placeholder=\"Enter the Physician ID\"\n              required\n            />\n            <input\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              type=\"password\"\n              className=\"pass\"\n              placeholder=\"Enter Password\"\n              required\n            />\n            <button className=\"register\" onClick={onSubmit}>\n              Register\n            </button>\n            <p style={{ color: \"red\", fontSize: \"25px\" }}>{error.username}</p>\n            <p style={{ color: \"red\", fontSize: \"25px\" }}>\n              {errors.physicianRegisterError\n                ? errors.physicianRegisterError.data.message\n                : \"\"}\n            </p>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(PhyRegisterByAdmin);\n"]},"metadata":{},"sourceType":"module"}